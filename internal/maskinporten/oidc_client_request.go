// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package maskinporten

import "encoding/json"
import "fmt"
import "reflect"

type OidcClientRequest struct {
	// Levetid i sekunder for utstedt access_token
	AccessTokenLifetime *int `json:"access_token_lifetime,omitempty" yaml:"access_token_lifetime,omitempty" mapstructure:"access_token_lifetime,omitempty"`

	// Applikasjonstype
	ApplicationType *OidcClientRequestApplicationType `json:"application_type,omitempty" yaml:"application_type,omitempty" mapstructure:"application_type,omitempty"`

	// Levetid for registrert autorisasjon i sekunder. I en OpenID Connect sammenheng
	// vil dette være tilgangen til userinfo-endepunktet.
	AuthorizationLifetime *int `json:"authorization_lifetime,omitempty" yaml:"authorization_lifetime,omitempty" mapstructure:"authorization_lifetime,omitempty"`

	// For interne skyapplikasjoner. Klientens logouri
	ClientLogoUri *string `json:"client_logo_uri,omitempty" yaml:"client_logo_uri,omitempty" mapstructure:"client_logo_uri,omitempty"`

	// Navn på klient, blir vist ved innlogging
	ClientName string `json:"client_name" yaml:"client_name" mapstructure:"client_name"`

	// For interne skyapplikasjoner. Klienten sin org beskrivelse
	ClientOrgDescription *string `json:"client_org_description,omitempty" yaml:"client_org_description,omitempty" mapstructure:"client_org_description,omitempty"`

	// For interne skyapplikasjoner. Klienten sitt organisasjonsnnavn
	ClientOrgName *string `json:"client_org_name,omitempty" yaml:"client_org_name,omitempty" mapstructure:"client_org_name,omitempty"`

	// Klienten sitt organisasjonsnummer. Kan kun sendast dersom avsendar har
	// idporten:dcr.supplier scopet.
	ClientOrgno *string `json:"client_orgno,omitempty" yaml:"client_orgno,omitempty" mapstructure:"client_orgno,omitempty"`

	// URL til klient (blir brukt på tilbake-knapp og ved feil)
	ClientUri *string `json:"client_uri,omitempty" yaml:"client_uri,omitempty" mapstructure:"client_uri,omitempty"`

	// Code challenge method for PKCE. Gyldige verdier er none eller s256. Dette er
	// kun relevant for OpenID Connect. Om ikke satt, vil default bli S256.
	CodeChallengeMethod *OidcClientRequestCodeChallengeMethod `json:"code_challenge_method,omitempty" yaml:"code_challenge_method,omitempty" mapstructure:"code_challenge_method,omitempty"`

	// Beskrivelse av klienten, ikke synlig for innbyggere, men blir lagret i Difis
	// støttesystemer
	Description string `json:"description" yaml:"description" mapstructure:"description"`

	// Flagg som bestemmer om parameterne for issuer og sesjons-id skal sendes med
	// frontchannel_logout_uri
	FrontchannelLogoutSessionRequired *bool `json:"frontchannel_logout_session_required,omitempty" yaml:"frontchannel_logout_session_required,omitempty" mapstructure:"frontchannel_logout_session_required,omitempty"`

	// URL som provideren sender request til ved utlogging trigget av annen klient i
	// samme sesjon
	FrontchannelLogoutUri *string `json:"frontchannel_logout_uri,omitempty" yaml:"frontchannel_logout_uri,omitempty" mapstructure:"frontchannel_logout_uri,omitempty"`

	// Tillatte Grant Types for klient. Implicit skal ikke tas i bruk av nye
	// klienter(deprecated).
	GrantTypes []OidcClientRequestGrantTypesElem `json:"grant_types" yaml:"grant_types" mapstructure:"grant_types"`

	// Integrasjonstype
	IntegrationType *OidcClientRequestIntegrationType `json:"integration_type,omitempty" yaml:"integration_type,omitempty" mapstructure:"integration_type,omitempty"`

	// LogoUri corresponds to the JSON schema field "logo_uri".
	LogoUri *string `json:"logo_uri,omitempty" yaml:"logo_uri,omitempty" mapstructure:"logo_uri,omitempty"`

	// Liste over url’er som provideren redirecter til etter fullført utlogging
	PostLogoutRedirectUris []string `json:"post_logout_redirect_uris,omitempty" yaml:"post_logout_redirect_uris,omitempty" mapstructure:"post_logout_redirect_uris,omitempty"`

	// Liste over gyldige url’er som provideren kan redirecte tilbake til etter
	// vellykket autorisasjonsforespørsel
	RedirectUris []string `json:"redirect_uris,omitempty" yaml:"redirect_uris,omitempty" mapstructure:"redirect_uris,omitempty"`

	// Levetid i sekunder for utstedt refresh_token
	RefreshTokenLifetime *int `json:"refresh_token_lifetime,omitempty" yaml:"refresh_token_lifetime,omitempty" mapstructure:"refresh_token_lifetime,omitempty"`

	// Ved REUSE kan refresh_token benyttes flere ganger.  Ved ONETIME kan
	// refresh_token kun benyttes en gang.
	RefreshTokenUsage *OidcClientRequestRefreshTokenUsage `json:"refresh_token_usage,omitempty" yaml:"refresh_token_usage,omitempty" mapstructure:"refresh_token_usage,omitempty"`

	// Liste over scopes som klienten kan forespørre. For OpenID Connect er aktuelle
	// scopes openid og profile. For API-sikring, ta kontakt med oss
	Scopes []string `json:"scopes,omitempty" yaml:"scopes,omitempty" mapstructure:"scopes,omitempty"`

	// Flagg for å disable sso. Dette vil gjøre at brukeren må logge inn på nytt for
	// din klient. Dette er kun relevant for OpenID Connect. Om ikke satt, vil default
	// være false for ID-porten og true for Ansattporten
	SsoDisabled *bool `json:"sso_disabled,omitempty" yaml:"sso_disabled,omitempty" mapstructure:"sso_disabled,omitempty"`

	// Autentiseringsmetode for klient. None anbefales for klienter som kjører i
	// nettleser eller på mobil
	TokenEndpointAuthMethod *OidcClientRequestTokenEndpointAuthMethod `json:"token_endpoint_auth_method,omitempty" yaml:"token_endpoint_auth_method,omitempty" mapstructure:"token_endpoint_auth_method,omitempty"`
}

type OidcClientRequestApplicationType string

const OidcClientRequestApplicationTypeBrowser OidcClientRequestApplicationType = "browser"
const OidcClientRequestApplicationTypeNative OidcClientRequestApplicationType = "native"
const OidcClientRequestApplicationTypeWeb OidcClientRequestApplicationType = "web"

var enumValues_OidcClientRequestApplicationType = []interface{}{
	"web",
	"browser",
	"native",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *OidcClientRequestApplicationType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_OidcClientRequestApplicationType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_OidcClientRequestApplicationType, v)
	}
	*j = OidcClientRequestApplicationType(v)
	return nil
}

type OidcClientRequestCodeChallengeMethod string

const OidcClientRequestCodeChallengeMethodNone OidcClientRequestCodeChallengeMethod = "none"
const OidcClientRequestCodeChallengeMethodS256 OidcClientRequestCodeChallengeMethod = "S256"

var enumValues_OidcClientRequestCodeChallengeMethod = []interface{}{
	"none",
	"S256",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *OidcClientRequestCodeChallengeMethod) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_OidcClientRequestCodeChallengeMethod {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_OidcClientRequestCodeChallengeMethod, v)
	}
	*j = OidcClientRequestCodeChallengeMethod(v)
	return nil
}

type OidcClientRequestGrantTypesElem string

const OidcClientRequestGrantTypesElemAuthorizationCode OidcClientRequestGrantTypesElem = "authorization_code"
const OidcClientRequestGrantTypesElemImplicit OidcClientRequestGrantTypesElem = "implicit"
const OidcClientRequestGrantTypesElemRefreshToken OidcClientRequestGrantTypesElem = "refresh_token"
const OidcClientRequestGrantTypesElemUrnIetfParamsOauthGrantTypeJwtBearer OidcClientRequestGrantTypesElem = "urn:ietf:params:oauth:grant-type:jwt-bearer"

var enumValues_OidcClientRequestGrantTypesElem = []interface{}{
	"authorization_code",
	"implicit",
	"refresh_token",
	"urn:ietf:params:oauth:grant-type:jwt-bearer",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *OidcClientRequestGrantTypesElem) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_OidcClientRequestGrantTypesElem {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_OidcClientRequestGrantTypesElem, v)
	}
	*j = OidcClientRequestGrantTypesElem(v)
	return nil
}

type OidcClientRequestIntegrationType string

const OidcClientRequestIntegrationTypeAnsattporten OidcClientRequestIntegrationType = "ansattporten"
const OidcClientRequestIntegrationTypeApiKlient OidcClientRequestIntegrationType = "api_klient"
const OidcClientRequestIntegrationTypeConnect2Norway OidcClientRequestIntegrationType = "connect2norway"
const OidcClientRequestIntegrationTypeEformidling OidcClientRequestIntegrationType = "eformidling"
const OidcClientRequestIntegrationTypeIdporten OidcClientRequestIntegrationType = "idporten"
const OidcClientRequestIntegrationTypeIdportenSaml2 OidcClientRequestIntegrationType = "idporten_saml2"
const OidcClientRequestIntegrationTypeKrr OidcClientRequestIntegrationType = "krr"
const OidcClientRequestIntegrationTypeMaskinporten OidcClientRequestIntegrationType = "maskinporten"

var enumValues_OidcClientRequestIntegrationType = []interface{}{
	"idporten",
	"api_klient",
	"krr",
	"maskinporten",
	"eformidling",
	"ansattporten",
	"connect2norway",
	"idporten_saml2",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *OidcClientRequestIntegrationType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_OidcClientRequestIntegrationType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_OidcClientRequestIntegrationType, v)
	}
	*j = OidcClientRequestIntegrationType(v)
	return nil
}

type OidcClientRequestRefreshTokenUsage string

const OidcClientRequestRefreshTokenUsageONETIME OidcClientRequestRefreshTokenUsage = "ONETIME"
const OidcClientRequestRefreshTokenUsageREUSE OidcClientRequestRefreshTokenUsage = "REUSE"

var enumValues_OidcClientRequestRefreshTokenUsage = []interface{}{
	"ONETIME",
	"REUSE",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *OidcClientRequestRefreshTokenUsage) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_OidcClientRequestRefreshTokenUsage {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_OidcClientRequestRefreshTokenUsage, v)
	}
	*j = OidcClientRequestRefreshTokenUsage(v)
	return nil
}

type OidcClientRequestTokenEndpointAuthMethod string

const OidcClientRequestTokenEndpointAuthMethodClientSecretBasic OidcClientRequestTokenEndpointAuthMethod = "client_secret_basic"
const OidcClientRequestTokenEndpointAuthMethodClientSecretPost OidcClientRequestTokenEndpointAuthMethod = "client_secret_post"
const OidcClientRequestTokenEndpointAuthMethodNone OidcClientRequestTokenEndpointAuthMethod = "none"
const OidcClientRequestTokenEndpointAuthMethodPrivateKeyJwt OidcClientRequestTokenEndpointAuthMethod = "private_key_jwt"

var enumValues_OidcClientRequestTokenEndpointAuthMethod = []interface{}{
	"client_secret_post",
	"client_secret_basic",
	"private_key_jwt",
	"none",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *OidcClientRequestTokenEndpointAuthMethod) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_OidcClientRequestTokenEndpointAuthMethod {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_OidcClientRequestTokenEndpointAuthMethod, v)
	}
	*j = OidcClientRequestTokenEndpointAuthMethod(v)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *OidcClientRequest) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if _, ok := raw["client_name"]; raw != nil && !ok {
		return fmt.Errorf("field client_name in OidcClientRequest: required")
	}
	if _, ok := raw["description"]; raw != nil && !ok {
		return fmt.Errorf("field description in OidcClientRequest: required")
	}
	if _, ok := raw["grant_types"]; raw != nil && !ok {
		return fmt.Errorf("field grant_types in OidcClientRequest: required")
	}
	type Plain OidcClientRequest
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	if len(plain.ClientName) > 255 {
		return fmt.Errorf("field %s length: must be <= %d", "client_name", 255)
	}
	if plain.ClientUri != nil && len(*plain.ClientUri) > 255 {
		return fmt.Errorf("field %s length: must be <= %d", "client_uri", 255)
	}
	if len(plain.Description) > 255 {
		return fmt.Errorf("field %s length: must be <= %d", "description", 255)
	}
	if plain.FrontchannelLogoutUri != nil && len(*plain.FrontchannelLogoutUri) > 255 {
		return fmt.Errorf("field %s length: must be <= %d", "frontchannel_logout_uri", 255)
	}
	if plain.GrantTypes != nil && len(plain.GrantTypes) < 1 {
		return fmt.Errorf("field %s length: must be >= %d", "grant_types", 1)
	}
	if len(plain.GrantTypes) > 4 {
		return fmt.Errorf("field %s length: must be <= %d", "grant_types", 4)
	}
	*j = OidcClientRequest(plain)
	return nil
}
